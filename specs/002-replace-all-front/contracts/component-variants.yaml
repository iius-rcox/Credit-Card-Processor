openapi: 3.1.0
info:
  title: Component Variants Contract
  version: 1.0.0
  description: shadcn/ui component props and variants interface contract

components:
  schemas:
    ButtonProps:
      type: object
      properties:
        variant:
          type: string
          enum: [default, destructive, outline, secondary, ghost, link]
          default: default
        size:
          type: string
          enum: [default, sm, lg, icon]
          default: default
        asChild:
          type: boolean
          default: false
        disabled:
          type: boolean
          default: false
        className:
          type: string
      required: []

    CardProps:
      type: object
      properties:
        className:
          type: string
      required: []

    InputProps:
      type: object
      properties:
        type:
          type: string
          enum: [text, email, password, number, tel, url, search, date, file]
          default: text
        placeholder:
          type: string
        disabled:
          type: boolean
          default: false
        required:
          type: boolean
          default: false
        className:
          type: string
      required: []

    LabelProps:
      type: object
      properties:
        htmlFor:
          type: string
        className:
          type: string
      required: []

    AlertProps:
      type: object
      properties:
        variant:
          type: string
          enum: [default, destructive]
          default: default
        className:
          type: string
      required: []

    ProgressProps:
      type: object
      properties:
        value:
          type: number
          minimum: 0
          maximum: 100
          description: Progress percentage (0-100)
        max:
          type: number
          default: 100
        className:
          type: string
      required: []

    FormFieldProps:
      type: object
      properties:
        control:
          type: object
          description: react-hook-form control object
        name:
          type: string
        render:
          type: object
          description: Render function for form field
      required: [name, render]

    ThemeDetectionResult:
      type: object
      required:
        - supportsOKLCH
        - shouldWarn
      properties:
        supportsOKLCH:
          type: boolean
          description: Whether browser supports OKLCH color format
        shouldWarn:
          type: boolean
          description: Whether to display warning to user
        fallbackMode:
          type: string
          enum: [none, degraded]
          description: Active fallback mode
        warningMessage:
          type: string
          example: "Your browser has limited color support. Display may vary."

paths:
  /detect-oklch-support:
    get:
      summary: Check browser OKLCH support
      operationId: detectOKLCHSupport
      responses:
        '200':
          description: Detection result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeDetectionResult'
              examples:
                supported:
                  value:
                    supportsOKLCH: true
                    shouldWarn: false
                    fallbackMode: none
                unsupported:
                  value:
                    supportsOKLCH: false
                    shouldWarn: true
                    fallbackMode: degraded
                    warningMessage: "Your browser has limited color support. Display may vary."
