version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: credit-card-postgres
    environment:
      POSTGRES_DB: credit_card_db
      POSTGRES_USER: ccprocessor
      POSTGRES_PASSWORD: devpassword123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ccprocessor -d credit_card_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: credit-card-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: credit-card-backend
    environment:
      DATABASE_URL: postgresql+asyncpg://ccprocessor:devpassword123@postgres:5432/credit_card_db
      POSTGRES_HOST: postgres
      POSTGRES_DB: credit_card_db
      POSTGRES_USER: ccprocessor
      POSTGRES_PASSWORD: devpassword123
      REDIS_URL: redis://redis:6379/0
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ENVIRONMENT: development
      LOG_LEVEL: DEBUG
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    image: node:20-alpine
    container_name: credit-card-frontend
    working_dir: /app
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ..:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: sh -c "npm install && npm run dev"

networks:
  default:
    name: credit-card-network

volumes:
  postgres_data:
    driver: local
